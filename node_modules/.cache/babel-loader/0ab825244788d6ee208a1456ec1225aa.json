{"ast":null,"code":"import { userConstants } from '../_constants';\nimport { userService } from '../_services';\nimport { history } from '../_helpers';\nexport const userActions = {\n  login,\n  logout\n};\n\nfunction login(user) {\n  return dispatch => {\n    dispatch(success(user));\n    history.push('/');\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  userService.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}","map":{"version":3,"sources":["E:/wamp64/www/cryptolisting/frontend/src/_actions/user.actions.js"],"names":["userConstants","userService","history","userActions","login","logout","user","dispatch","success","push","request","type","LOGIN_REQUEST","LOGIN_SUCCESS","failure","error","LOGIN_FAILURE","LOGOUT"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,KADuB;AAEvBC,EAAAA;AAFuB,CAApB;;AAKP,SAASD,KAAT,CAAeE,IAAf,EAAqB;AACjB,SAAOC,QAAQ,IAAI;AACrBA,IAAAA,QAAQ,CAACC,OAAO,CAACF,IAAD,CAAR,CAAR;AACAJ,IAAAA,OAAO,CAACO,IAAR,CAAa,GAAb;AACG,GAHD;;AAKA,WAASC,OAAT,CAAiBJ,IAAjB,EAAuB;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAEX,aAAa,CAACY,aAAtB;AAAqCN,MAAAA;AAArC,KAAP;AAAoD;;AAC7E,WAASE,OAAT,CAAiBF,IAAjB,EAAuB;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAEX,aAAa,CAACa,aAAtB;AAAqCP,MAAAA;AAArC,KAAP;AAAoD;;AAC7E,WAASQ,OAAT,CAAiBC,KAAjB,EAAwB;AAAE,WAAO;AAAEJ,MAAAA,IAAI,EAAEX,aAAa,CAACgB,aAAtB;AAAqCD,MAAAA;AAArC,KAAP;AAAqD;AAClF;;AAED,SAASV,MAAT,GAAkB;AACdJ,EAAAA,WAAW,CAACI,MAAZ;AACA,SAAO;AAAEM,IAAAA,IAAI,EAAEX,aAAa,CAACiB;AAAtB,GAAP;AACH","sourcesContent":["import { userConstants } from '../_constants';\r\nimport { userService } from '../_services';\r\nimport { history } from '../_helpers';\r\n\r\nexport const userActions = {\r\n    login,\r\n    logout,\r\n};\r\n\r\nfunction login(user) {\r\n    return dispatch => {\r\n\t\tdispatch(success(user));\r\n\t\thistory.push('/');\r\n    };\r\n\r\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n}\r\n\r\nfunction logout() {\r\n    userService.logout();\r\n    return { type: userConstants.LOGOUT };\r\n}"]},"metadata":{},"sourceType":"module"}