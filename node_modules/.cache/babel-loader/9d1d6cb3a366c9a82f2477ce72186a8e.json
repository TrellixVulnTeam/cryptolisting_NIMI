{"ast":null,"code":"var _jsxFileName = \"E:\\\\wamp64\\\\www\\\\cryptolisting\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'; //import logo from './logo.svg';\n\nimport { render } from 'react-dom';\nimport { userActions } from './_actions';\nimport './App.css';\nimport './css/stylesheet.css';\nimport './css/mmenu.css';\nimport './css/style.css';\nimport './components/FontawesomeIcons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport 'font-awesome/css/font-awesome.min.css'; //import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Footer from './components/Footer';\nimport Addcoin from './components/Addcoin';\nimport Success from './components/Success';\nimport CoinDetails from './components/CoinDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  render() {\n    // Check for token and update application state if required\n    const user = localStorage.getItem('user');\n\n    if (token) {\n      store.dispatch({\n        type: userConstants.LOGIN_SUCCESS,\n        user\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"main_wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clearfix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              component: Home\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/addcoin\",\n              component: Addcoin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/success\",\n              component: Success\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/:chain/:name/:id\",\n              component: CoinDetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this);\n  }\n\n} //export default App;\n\n\nfunction mapState(state) {\n  const {\n    loggingIn\n  } = state.authentication;\n  const {\n    authentication\n  } = state;\n  const {\n    user\n  } = authentication;\n  return {\n    user,\n    loggingIn\n  };\n}\n\nconst actionCreators = {\n  login: userActions.login,\n  logout: userActions.logout\n};\nconst connectedApp = connect(mapState, actionCreators)(App);\nexport default connectedApp;","map":{"version":3,"sources":["E:/wamp64/www/cryptolisting/frontend/src/App.js"],"names":["React","Component","connect","BrowserRouter","Router","Switch","Route","Link","render","userActions","FontAwesomeIcon","Header","Home","Footer","Addcoin","Success","CoinDetails","App","user","localStorage","getItem","token","store","dispatch","type","userConstants","LOGIN_SUCCESS","mapState","state","loggingIn","authentication","actionCreators","login","logout","connectedApp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n//import logo from './logo.svg';\nimport { render } from 'react-dom';\n\nimport { userActions } from './_actions';\n\nimport './App.css';\n\nimport './css/stylesheet.css';\nimport './css/mmenu.css';\nimport './css/style.css';\nimport './components/FontawesomeIcons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport 'font-awesome/css/font-awesome.min.css';\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Footer from './components/Footer';\nimport Addcoin from './components/Addcoin';\nimport Success from './components/Success';\nimport CoinDetails from './components/CoinDetails';\n\nclass App extends Component{\n\trender() {\n\t\t// Check for token and update application state if required\n\t\tconst user = localStorage.getItem('user');\n\t\tif (token) {\n\t\t\tstore.dispatch({ type: userConstants.LOGIN_SUCCESS, user });\n\t\t}\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t<div id=\"main_wrapper\">\n\t\t\t\t\t<Header />\n\t\t\t\t\t<div className=\"clearfix\"></div>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/' component={Home} />\n\t\t\t\t\t\t<Route exact path='/addcoin' component={Addcoin} />\n\t\t\t\t\t\t<Route exact path='/success' component={Success} />\n\t\t\t\t\t\t<Route exact path='/:chain/:name/:id' component={CoinDetails} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\n//export default App;\n\nfunction mapState(state) {\n    const { loggingIn } = state.authentication;\n\tconst { authentication } = state;\n    const { user } = authentication;\n    return { user, loggingIn };\n}\n\nconst actionCreators = {\n    login: userActions.login,\n    logout: userActions.logout\n};\n\nconst connectedApp = connect(mapState, actionCreators)(App);\n\nexport default connectedApp;\n"]},"metadata":{},"sourceType":"module"}